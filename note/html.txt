=========================================================================
1. Introduce

<!DOCTYPE html>: document is HTML5 document
<html>: root element of an HTML page
<head>: contain meta information
<title>: title for the HTML page
<body>: define the document's body
    <h1-h6>: heading
    <p>: paragraph
    <img>: image
    <a> hyperlink
    ...

<br>: break line

Ctrl + U: view HTML source
find element: right click -> inspect
=========================================================================
2: HTML basic

element: everything from start tag to end tag
    - nested element: element contain other elements
    - never skip end tag: can lead an unexpected behaviour
    - not case sensitive

attribute: provide information about elements
    - all elements can have attributes
    - always specified in the stag tag
    - name/value pairs: name="value"
    - examples:
        <a href="">
            + hyperlink
            + href: URL
        <img src="" alt="">
            + image
            + src: path to image
                - absolute URL: link to external images on another website
                - relative URL: internal website
            + alt: alternate text
        style: add styles to element: color, font, size,...
        lang:
            + language: vi, en...
            + country code: language-country code: "en-US"
        title:
            + extra information
            + value of title: displayed as a tooltip

comment:
    - comment to source code
    - hide content
    - hide content inside a line

=========================================================================
3: HTML formatting and style

heading: title or sub-title
    - h1 -> h6: most to least important
    - bigger heading:
        + each heading has a default size
        + specify size for heading: use style attribute with CSS font-size property

paragraph:
    - cannot change the display by add space, newline, tab...
    - browser auto remove any extra spaces, lines...
    - horizontal rules <hr>
    - pre tag <pre>

style: add style to an element, use CSS property
    - syntax: <tagname style="property:value;">
        + property: CSS property
        + value: CSS value
    - back-ground color: define background color for element
    - text color: <color>
    - font: <font-family>
    - text size: <font-size>
    - text alignment: <text-align>: horizontal text alignment

text formating:
    bold:               <b>, <strong>
    italic:             <i>, <em>
    smaller text:       <small>
    mark / highlight:   <mark>
    delete text         <del>
    insert text         <ins>
    subscript text      <sub>
    superscript text    <sup>

quotation
    quotation:                  <blockquote>
    short quotation:            <q>
    abbreviation / acronym      <abbr>
    contact information         <address>
    work title                  <cite>
    bi-directional override     <bdo>

css: (cascading style sheets): used to format the layout of a webpage
    - cascading: mean if apply to parent element will also apply to all children elements within the parent, unless specify something else.
    - using css: can be added to HTML documents in 3 ways:
        + inline:
            - using <style> attribute inside HTML element
            - apply a unique style to a single element
        + internal:
            - using <style> element in the <head> section
            - used to define a style for a single HTML page.
        + external:
            - using <link>  element to link to an external CSS file
            - used to define the style for many HTML pages.
        + most common way: keep styles in external CSS files
    - css color, font, size
        + color:        define text color to be used
        + font-family:  define font to be used
        + font-size:    define text size to be used
    - css border:  define a border around an HTML element
    - css padding: define a padding (space) between the text and the border
    - css margin:  define a margin (space) outside the border
    - link to external css: url/path

favicon: a small image displayed next to the page title in the browser tab
    - common name: favicon.io
    - format suppor: ico, png, gif, jpeg, svg (depends on the browser)

Block and Inline elements:
    - every HTML elements has a default display value, depend on what type of element
    - 2 display values: block and inline
    - block-level element:
        + always start on a new line
        + alwyas take up the full width available
        + 2 common used: <p>, <div>
            <p>:    paragraph
            <div>   division / section
        + there are a lot of block-level elements in HTML
    - inline element:
        + doesn't start on a new line, only takes up as much width as necessary
        + <span> element
        + there are a lot of inline elements in HTML
    - the <div> element:
        + often used as a container for other HTML elements
        + no required attributes, but style, class, and id are common
        + when used together with CSS, the <div> element can be used to style blocks of content
    - the <span> element:
        + an inline container used to mark up a part of a text / document
        + no required attributes, but style, class, and id are common
        + when used together with CSS, the <span> element can be used to style part of the text

class: used to specify a class for an HTML element
    - multiple HTML elemnts can share the same class
    - class attribute:
        + used to point to a class name in a style sheet.
        + can also used by a Javascript to access/manipulate elements with the specific class name
    - class syntax:
        .class_name {
            CSS properties
        }
    - multiple classes
    - different elements can share same class
    - Javascript can access element with a specific class name with the getElementsByClassName() method

id attribute
    - used to specify a unique id for an HTML element
    - cannot have the same id
    - id attribute used to point to a specific style declaration in a style sheet, also was accessed by Javascript
    - syntax:
        .id_name {
            CSS properties
        }
    - note: id must containt at least one character; cannot start with a number, must not contain whitespaces (spaces, tabs...)
    - class and id:
        + a class name can be used by multiple HTML elements
        + an id name must only be used by one HTML element
    - bookmark with ID and Link
        + bookmark: used to allow reader to jump to specific part of a webpage
        + to use a bookmark:
            - first: create it
            - then: link to it
    - used with Javascript: getElementById() method

file path:
    - describe the location of a file in a web site's folder structure
    - used when linking to external files, like:
        web pages
        images
        style sheets
        Javascript source
    - type of file path:
        + absolute file path: the full URL to a file
        + relative file path
        + best practice: use relative file paths

head element:
    - head element is a container for the following elements:
        <title>
        <style>:    define style information for a single HTML page
        <meta>:     often used to specify: character set, page description, keywords, author of the document, viewport settings.
        <link>:     often used to link to external style sheets (css)
        <script>:   used to define client-side Javascript
        <base>:     specify the base URL and/or target for all relative URLs in a page.
    - the <head> element is a container for metadata (data about data)
    - metadata: data about the HTML document

layout: website often display content in multiple column (like a magazine or a newspaper)
    - HTML layout elements:
        <header>        define a header for a document or a section
        <nav>           define a set of navigation links
        <section>       define a section
        <article>       define an independent, self-contained content
        <aside>         define content aside from the content
        <footer>        define a footer
        <details>       define additional details
        <summary>       define a heading for the <details> element
    - HTML layout technique
        + CSS framework (like W3.CSS or Bootstrap)
        + CSS float property
            - easy to learn
            - disadvantage: float elements are tied to the document flow, which may harm the flexibility
        + CSS flexbox: used to ensure that elements behave predictably when the page layout must accommodate different
            screen size and different display devices.
        + CSS grid: offer a grid-based layout system, with rows and columns, making it easier to design web pages

responsive web design: create a web page that look good on all devices
    - will automatically adjust for different screen size and viewport
    - setting the viewport
    - responsive image
    - using max-width property: scale down, but nerver scale up its original size
    - show different image depend on different browser
    - responsive text size
    - media query: define completely different style for different browser size
    - responsive framework: offer responsive design: W3.CSS, Bootstrap

semantic element: element with a meaning
    - clearly describe its meaning to both browser and developer
        + non-semantic elements:    <div>, <span>
        + semantic elements:        <form>, <table>, <article>
    - why semantic: allow data to be shared and reused across application, community
    - some semantic elements:
        + <section>: group of content, where can be used:
            chapter
            introduction
            new item
            contact information
        + <article>
            forum post
            blog post
            user comment
            product card
            newspaper article
        + <header>
            <h1> to <h6>
            logo or icon
            authorship information
        + <footer>
            authorship information
            copyright information
            contact information
            sitemap
            back to top links
            related documents
        + <nav> defines a set of navigation links
        + <aside>: define some content aside from the content it is placed in
        + <figure>, <figcaption>
            <figure>:       self-container content: illustration, diagram, photo, code listing...
            <figcaption>:   define a caption for a <figure> element.

style guide: a consistent, clean and tidy HTML code
    - always declare the document type
    - use lowercase name with:
        element
        attribute
        file name
    - close all HTML elements
    - always quote attribute value
    - always specify the alt, width, height values of a image.
    - less spaces: easier to read
    - avoid long code line
    - 2 spaces instead of tab
    - never skip <title> element
    - always add <html>, <head> and <body>
        recommend using the <head> tag
        omit <body>: can produce error in older browser
        omit <html> and <body> can also cash DOM and XML software
    - close empty element: keep closing slash (/), it's required in XML and XHTML
    - add lang attribute
    - meta data: <meta charset=chatset_name should be defined
    - setting viewport
    - use css and Javascript
        <link rel="stylesheet" href="styles.css">
        <script src="myscript.js">
        access HTML element with Javascript
    - default file name: index.html (when URL does not specify a filename at the end)

entity
    - look like: &entity_name or &#entity_number;
        + entity name: easy to remember
        + disadvantage: browser may not support
    - combine diacritical mark: `,', ~, ^, ?...

symbol: mathematical, technical, currency
    - add with: entity name / number (dec or hex)
    - support: mathematical, Greek letter (alpha, beta...) and other entities

charset: must know which character set to use
    - list of charsets:
        ASCII                   first character enconding standard
        ISO-8859-1              default character set for HTML 4 (also supported UTF-8)
        ANSI (Windows-1252)     the original Windows character set (ISO-8859-1 + 32 extra characters)
        HTML5                   encourage using UTF-8, which cover almost characters and symbols in the world
    - HTML charset attribute: use <meta> tag
        <meta charset="UTF-8">

URL encode
    - URL: uniform resource locators
        + URL is another word for a web address
        + URL can composed of words, Internel Protocol (IP) address (e.g. 192.168.20.50)
        + most people enter a name when surfing because easier to remember
    - URL:
        + web browser request page from web sever by using a URL
        + syntax rule:
            scheme://prefix.domain:port/path/filename
            scheme      type of Internet service: http, https...
            prefix      domain prefix (default ofr http is www)
            domain      the Internet domain name (like google.com)
            port        the port number at the host (default for http is 80)
            path        path at the server (if omitted: root directory of the site)
            filename    name of a document / resource
        + scheme
            http        HyperText Transfer Protocol             Common web pages. Not encrypted
            https       Secure HyperText Transfer Protocol      Secure web pages. encrypted
            ftp         File Transfer Protocol                  Downloading / uploading file
            file                                                A file on your computer
    - URL encoding: URLs can only be sent over the Internet using the ASCII. If not, it has to be converted.

HTML/XHTML
    - XHTML:
        + a stricter (x = extensible)
        + HTML defined as an XML application
        + was developted to make HTML more extensible and flexible to work with other
            data formats (such as XML)
            - HTML: browser ignore errors
            - XHTML: a much stricter error handling
    - important difference: mandatory
        <!DOCTYPE>
        xmlns attribute in <html>
        elements must always properly nested, closed, lowercase
        attribute: must be lowercase, quoted, forbidden minimum

=========================================================================
4: HTML Colors

color:
    - HTML colors are specified with predefined color names, or RGB, HEX,
    HSL, RGBA, HSLA value
    - color for:
        + color names
        + background
        + text
        + border
        + color values
    - color values:
        + color can specified uing RGB, HEX, HSL, RGBA, HSLA value
            RGB     rgb(255, 99, 71)
            HEX     #ff6347
            HSL     hsl(9, 100%, 64%)
            RGBA    rgba(255, 99, 71, 0.5)
            HSLA    hsla(9, 100%, 64%, 0.5)

=========================================================================
5. HTML links

links:
    - syntax: <a href="url">text</a>
    - link appear as:
        + unvisited link: underlined, blue
        + visited link: underlined, purple
        + active link: underlined, red
    - target attribute
        + default: linked page will be displayed in the current browser window
        + target: specify where to open the linked document
            _self: same window/tab
            _blank: new window/tab
            _parent: parent frame
            _top: full body of the window
    - absolute vs relative URL
    - use an image as a link
    - link to an email address
    - button as a link
    - link title

link colors:
    - a link will appear like this:
        + unvisited link:   blue
        + visited link:     purple
        + active link:      red
    - can change link state colors by using the CSS
    - can change a button style using the CSS

link bookmark

=========================================================================
6. HTML Images

images:
    - <img> tag used to embed an image in a web page
        + not inserted, only link to web page
        + create a holding space for a reference image
    - <img> attributes: src, alt, width, height
    - image size:
        + use <style> attribute to specify the width and height of an image
        + alternate: use width, height (pixel) attribute
        + recommend: using the <style> attribute to prevent styles sheets changing size of an image
    - allow animated image (gif)
    - image floating: left/right of text
    - common image format: apng, gif, ico, jpeg, png, svg

image map:
    - create clickable areas on an image, area was defined in <area> tag
    - must add a usemap attribute
    - area: rect, cricle, poly, default (entire region) and also add coordinate

background-image
    - to add background, use style attribute and CSS background-image property
        + can also specify the background image in the <style> element, in <head> section
        + entire page have a background image: specify background image on <body> section of CSS style
    - background repeat
        + default: if background image < element: repeat until reach the end of the element (body, p, h...)
        + avoid: add background-repeat: no-repeat;
    - background cover:
        + cover entire element: background-size: cover;
        + make sure entire element always covered: background-attachment: fixed;
    - background stretch: background-size (re-size window)

picture element:
    - <picture> allow display different picture for different device or screen size
    - contain one or more <source> element
    - when use:
        + different screen size or device
        + format support: some browsers or devices may not support all image format.

=========================================================================
7. HTML Table

table:
    - a table in HTML consists of table cells inside rows and columns
    - table cell:
        + everything between <td> and </td> (td stands for table data)
        + a table cell can contain all softs of elements: text, image, list, link, other table...
    - table row:
        + between <tr> and </tr> tag
        + tr stands for table row
    - table header:
        + use with <th> and </th>
        + td stands for table header
        + default: bold and centered, can change with CSS

table border:
    - add a border:
        + when add a border to a table, also add border around each table cell
        + to avoid double border, use border-collapse
    - manipulate with border:
        + style cell
        + round border
        + border style: dotted, dashed, solid, double, groove, ridge, inset, outset, none, hidden
        + border color

table size:
    - can change size of table, row and column
    - use style attribute to the <table> element

table header:
    - can have headers for each column or row, or many columns / rows
    - align table header
        + default: bold and center
        + use text-align property to modify
    - manipulate:
        + multi-column header: use colspan attribute,
        + table caption: use <caption> tag, should be inserted immediately after <table> tag

padding, spacing:
    - cell padding
        + space between cell edge and cell content
        + default: set to 0
        + modify: use padding property
    - cell spacing:
        + space between each cell
        + default: 2 pixels
        + modify: border-spacing property

colspan, rowspan:

table styling:
    - zebra stripe
    - vertical zebra stripe
    - horizontal divider: specify border only at the bottom each table row
    - hoverable: hightlight table row when mouse move over

table colgroup:
    - use <colgroup> container contain <col> element
    - limit CSS properties to be used in colgroup:
        width
        visibility
        background
        border
    - empty colgroup: no style for column was specified
    - can hide column

=========================================================================