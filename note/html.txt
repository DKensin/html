=========================================================================
1. Introduce

<!DOCTYPE html>: document is HTML5 document
<html>: root element of an HTML page
<head>: contain meta information
<title>: title for the HTML page
<body>: define the document's body
    <h1-h6>: heading
    <p>: paragraph
    <img>: image
    <a> hyperlink
    ...

<br>: break line

Ctrl + U: view HTML source
find element: right click -> inspect
=========================================================================
2: HTML basic

element: everything from start tag to end tag
    - nested element: element contain other elements
    - never skip end tag: can lead an unexpected behaviour
    - not case sensitive

attribute: provide information about elements
    - all elements can have attributes
    - always specified in the stag tag
    - name/value pairs: name="value"
    - examples:
        <a href="">
            + hyperlink
            + href: URL
        <img src="" alt="">
            + image
            + src: path to image
                - absolute URL: link to external images on another website
                - relative URL: internal website
            + alt: alternate text
        style: add styles to element: color, font, size,...
        lang:
            + language: vi, en...
            + country code: language-country code: "en-US"
        title:
            + extra information
            + value of title: displayed as a tooltip

comment:
    - comment to source code
    - hide content
    - hide content inside a line

=========================================================================
3: HTML formatting and style

heading: title or sub-title
    - h1 -> h6: most to least important
    - bigger heading:
        + each heading has a default size
        + specify size for heading: use style attribute with CSS font-size property

paragraph:
    - cannot change the display by add space, newline, tab...
    - browser auto remove any extra spaces, lines...
    - horizontal rules <hr>
    - pre tag <pre>

style: add style to an element, use CSS property
    - syntax: <tagname style="property:value;">
        + property: CSS property
        + value: CSS value
    - back-ground color: define background color for element
    - text color: <color>
    - font: <font-family>
    - text size: <font-size>
    - text alignment: <text-align>: horizontal text alignment

text formating:
    bold:               <b>, <strong>
    italic:             <i>, <em>
    smaller text:       <small>
    mark / highlight:   <mark>
    delete text         <del>
    insert text         <ins>
    subscript text      <sub>
    superscript text    <sup>

quotation
    quotation:                  <blockquote>
    short quotation:            <q>
    abbreviation / acronym      <abbr>
    contact information         <address>
    work title                  <cite>
    bi-directional override     <bdo>

css: (cascading style sheets): used to format the layout of a webpage
    - cascading: mean if apply to parent element will also apply to all children elements within the parent, unless specify something else.
    - using css: can be added to HTML documents in 3 ways:
        + inline:
            - using <style> attribute inside HTML element
            - apply a unique style to a single element
        + internal:
            - using <style> element in the <head> section
            - used to define a style for a single HTML page.
        + external:
            - using <link>  element to link to an external CSS file
            - used to define the style for many HTML pages.
        + most common way: keep styles in external CSS files
    - css color, font, size
        + color:        define text color to be used
        + font-family:  define font to be used
        + font-size:    define text size to be used
    - css border:  define a border around an HTML element
    - css padding: define a padding (space) between the text and the border
    - css margin:  define a margin (space) outside the border
    - link to external css: url/path

favicon: a small image displayed next to the page title in the browser tab
    - common name: favicon.io
    - format suppor: ico, png, gif, jpeg, svg (depends on the browser)

Block and Inline elements:
    - every HTML elements has a default display value, depend on what type of element
    - 2 display values: block and inline
    - block-level element:
        + always start on a new line
        + alwyas take up the full width available
        + 2 common used: <p>, <div>
            <p>:    paragraph
            <div>   division / section
        + there are a lot of block-level elements in HTML
    - inline element:
        + doesn't start on a new line, only takes up as much width as necessary
        + <span> element
        + there are a lot of inline elements in HTML
    - the <div> element:
        + often used as a container for other HTML elements
        + no required attributes, but style, class, and id are common
        + when used together with CSS, the <div> element can be used to style blocks of content
    - the <span> element:
        + an inline container used to mark up a part of a text / document
        + no required attributes, but style, class, and id are common
        + when used together with CSS, the <span> element can be used to style part of the text

class: used to specify a class for an HTML element
    - multiple HTML elemnts can share the same class
    - class attribute:
        + used to point to a class name in a style sheet.
        + can also used by a Javascript to access/manipulate elements with the specific class name
    - class syntax:
        .class_name {
            CSS properties
        }
    - multiple classes
    - different elements can share same class
    - javascript can access element with a specific class name with the getElementsByClassName() method

id attribute
    - used to specify a unique id for an HTML element
    - cannot have the same id
    - id attribute used to point to a specific style declaration in a style sheet, also was accessed by Javascript
    - syntax:
        .id_name {
            CSS properties
        }
    - note: id must containt at least one character; cannot start with a number, must not contain whitespaces (spaces, tabs...)
    - class and id:
        + a class name can be used by multiple HTML elements
        + an id name must only be used by one HTML element
    - bookmark with ID and Link
        + bookmark: used to allow reader to jump to specific part of a webpage
        + to use a bookmark:
            - first: create it
            - then: link to it
    - used with javascript: getElementById() method

=========================================================================